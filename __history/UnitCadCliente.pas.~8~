unit UnitCadCliente;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Data.DB, Vcl.StdCtrls, Vcl.Grids,
  Vcl.DBGrids, Vcl.Buttons, Vcl.ExtCtrls;

type
  TformListClientes = class(TForm)
    Panel1: TPanel;
    txtBusca: TEdit;
    Panel2: TPanel;
    Label1: TLabel;
    DBGrid1: TDBGrid;
    Label2: TLabel;
    procedure txtBuscaChange(Sender: TObject);
    procedure BitBtn2Click(Sender: TObject);
    procedure DBGrid1TitleClick(Column: TColumn);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  formListClientes: TformListClientes;

implementation

{$R *.dfm}

uses UnitDM, UnitNovoCliente;

procedure TformListClientes.BitBtn2Click(Sender: TObject);
begin
  formCadCliente.ShowModal;
end;

procedure TformListClientes.DBGrid1TitleClick(Column: TColumn);
var
  sIndexName: string;
  oOrdenacao: TIndexOptions;
  i: smallint;
begin
    // retira a formatação em negrito de todas as colunas
  for i := 0 to DBGrid.Columns.Count - 1 do
    DBGrid.Columns[i].Title.Font.Style := [];

  // configura a ordenação ascendente ou descendente
  if ClientDataSet.IndexName = Column.FieldName + '_ASC' then
  begin
    sIndexName := Column.FieldName + '_DESC';
    oOrdenacao := [ixDescending];
  end
  else
  begin
    sIndexName := Column.FieldName + '_ASC';
    oOrdenacao := [];
  end;

  // adiciona a ordenação no DataSet, caso não exista
  if ClientDataSet.IndexDefs.IndexOf(sIndexName) < 0 then
    ClientDataSet.AddIndex(sIndexName, Column.FieldName, oOrdenacao);

  ClientDataSet.IndexDefs.Update;

  // formata o título da coluna em negrito
  Column.Title.Font.Style := [fsBold];

  // atribui a ordenação selecionada
  ClientDataSet.IndexName := sIndexName;

  ClientDataSet.First;
end;

procedure TformListClientes.txtBuscaChange(Sender: TObject);
begin
   DM.tbClientes.Locate('nome',txtBusca.Text,[loPartialKey]);
end;

end.
